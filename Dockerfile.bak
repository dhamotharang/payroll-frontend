FROM node:13.7 AS compile-image
COPY package.json package-lock.json ./    
RUN npm install && mkdir /payroll-frontend
ENV PATH="./node_modules/.bin:$PATH"
WORKDIR /payroll-frontend
COPY . .
RUN ng build --prod
FROM nginx
RUN rm -rf /usr/share/nginx/html/*
COPY nginx.conf /etc/nginx/nginx.conf
COPY --from=compile-image /payroll-frontend/dist /usr/share/nginx/html

#RUN chmod -R 777 /etc/nginx
#RUN chmod -R 777 /var/cache/

#---------------------------------------
FROM node:13.7 AS compile-image
COPY package.json package-lock.json ./    
RUN npm install && mkdir /payroll-frontend
ENV PATH="./node_modules/.bin:$PATH"
WORKDIR /payroll-frontend
COPY . .
RUN ng build --prod
FROM nginxinc/nginx-unprivileged
#RUN rm -rf /usr/share/nginx/html/*
COPY nginx.conf /etc/nginx/nginx.conf
COPY --from=compile-image /payroll-frontend/dist /usr/share/nginx/html

#---------------------------------------
FROM node:13.7 AS compile-image
COPY package.json package-lock.json ./    
RUN npm install && mkdir /payroll-frontend
ENV PATH="./node_modules/.bin:$PATH"
WORKDIR /payroll-frontend
COPY . .
RUN ng build --prod
FROM nginx
RUN rm -rf /usr/share/nginx/html/*
COPY nginx.conf /etc/nginx/nginx.conf
COPY --from=compile-image /payroll-frontend/dist /usr/share/nginx/html

RUN chgrp -R root /var/cache/nginx /var/run /var/log/nginx && \
    chmod -R 770 /var/cache/nginx /var/run /var/log/nginx

EXPOSE 8080

CMD ["nginx", "-g", "daemon off;"]

#-----------------------------------------------------
####################################################################
### STAGE 1: Build ###
FROM node:lts-alpine AS build

#### make the 'app' folder the current working directory
WORKDIR /payroll-frontend

#### copy both 'package.json' and 'package-lock.json' (if available)
COPY package*.json ./

#### install angular cli
RUN npm install -g @angular/cli

#### install project dependencies
#RUN npm install && mkdir /payroll-frontend
RUN npm install 
################################################ENV PATH="./node_modules/.bin:$PATH"

#### copy things
COPY . .

#### generate build --prod
RUN npm run ng build --prod

### STAGE 2: Run ###
FROM nginxinc/nginx-unprivileged

#### copy nginx conf
COPY nginx.conf /etc/nginx/conf.d/default.conf
#COPY nginx.conf /etc/nginx/nginx.conf

COPY --from=build /payroll-frontend/dist /usr/share/nginx/html

#RUN chown -R $UID:$GID /var/cache/nginx/client_temp #No such file or directory

#### don't know what this is, but seems cool and techy
CMD ["nginx", "-g", "daemon off;"]